{
	"name": "DF_MergeThreeTablesFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_sql",
						"type": "LinkedServiceReference"
					},
					"name": "customers"
				},
				{
					"linkedService": {
						"referenceName": "ls_sql",
						"type": "LinkedServiceReference"
					},
					"name": "orders"
				},
				{
					"linkedService": {
						"referenceName": "ls_sql",
						"type": "LinkedServiceReference"
					},
					"name": "products"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_csv",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "AzureDataLakeStorage1",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "join2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as string,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Email as string,",
				"          Country as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     format: 'query',",
				"     store: 'sqlserver',",
				"     query: 'select * from dbo.customers',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> customers",
				"source(output(",
				"          OrderID as string,",
				"          CustomerID as string,",
				"          ProductID as string,",
				"          Quantity as string,",
				"          Price as string,",
				"          OrderDate as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     format: 'query',",
				"     store: 'sqlserver',",
				"     query: 'select * from dbo.orders',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> orders",
				"source(output(",
				"          ProductID as string,",
				"          ProductName as string,",
				"          Category as string,",
				"          Price as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     format: 'query',",
				"     store: 'sqlserver',",
				"     query: 'select * from dbo.products',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> products",
				"customers, orders join(customers@CustomerID == orders@CustomerID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"products, join1 join(products@ProductID == orders@ProductID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Index as string,",
				"          {Customer Id} as string,",
				"          {First Name} as string,",
				"          {Last Name} as string,",
				"          Company as string,",
				"          City as string,",
				"          Country as string,",
				"          {Phone 1} as string,",
				"          {Phone 2} as string,",
				"          Email as string,",
				"          {Subscription Date} as string,",
				"          Website as string",
				"     ),",
				"     partitionFileNames:['customer_order_products'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}